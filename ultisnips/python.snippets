
# vim: ft=snippets

# ==============================================================================
# ARGUMENTS
# ==============================================================================
snippet parse ""
import argparse
parser = argparse.ArgumentParser(description='$1')
args = parser.parse_args()
endsnippet

snippet arg "Generic argument"
parser.add_argument('${1:NAME}', help='${2:DESCRIPTION}')
endsnippet

snippet arg "File argument"
parser.add_argument('-f', '--file', dest='filename', help='${1:DESCRIPTION}', metavar='FILE')
endsnippet

snippet opt "Verbose argument"
parser.add_argument('-v', action='store_true', dest='verbose', default=False, help='${1:DESCRIPTION}')
endsnippet

snippet opt "Debug argument"
parser.add_argument('-v', action='store_true', dest='debug', default=False, help='${1:DESCRIPTION}')
endsnippet



# ==============================================================================
# PRINT
# ==============================================================================
snippet stderr ""
sys.stderr.write(${1:'string'})
endsnippet

snippet p ""
print(${1:'string'})
endsnippet


# ==============================================================================
# LISTS
# ==============================================================================
snippet select ""
list(filter(${1:condition}, ${2:list}))
endsnippet


# ==============================================================================
# REGEX
# ==============================================================================
snippet re ""
re.compile('${1:regex}')
endsnippet


# ==============================================================================
# SYSTEM
# ==============================================================================
snippet prepend "Prepend $PYTHON_PATH"
sys.path.insert(0, ${1:'/path/to/somewhere'})
endsnippet

snippet env ""
os.environ['${1:VARNAME}']
endsnippet


# ==============================================================================
# RUN
# ==============================================================================
snippet popen ""
import subprocess
p = subprocess.Popen(${1:'ls'}, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
for line in p.stdout.readlines():
	print(line)
retval = p.wait()
endsnippet

snippet run ""
import subprocess
${1:command} = ['ls', '-l']
print(f"=> {' '.join($1)}")
result = subprocess.run($1)
if result.returncode != 0:
	exit(result.returncode)
endsnippet


