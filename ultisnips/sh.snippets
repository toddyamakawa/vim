
# vim: ft=snippets

snippet #!
#!/usr/bin/env bash
endsnippet

snippet at_exit "at exit" b
function at_exit() {
	local RETVAL=$?
	echo -e "command: $@\nexit: $RETVAL"
}
eval trap "'at_exit \$0 $@'" EXIT
endsnippet

snippet -
-${1:arg}) $1=\$1; shift;;
endsnippet

snippet do
do
	$1
done
endsnippet

snippet while
while [[ ${1:condition} ]]; do
	$2
done
endsnippet

snippet read "read lines" b
while read line; do
	$0
done < <(${1:command})
endsnippet

snippet then "" w
then
	$1
fi
endsnippet

snippet 2 "" b
echo ${1:"fail message"} 1>&2
endsnippet

snippet fail
{ echo -e "${2:file not found}" 1>&2; exit 2; }
endsnippet

snippet select "Yes/No?" b
echo 'Do you wish to continue?'
select yes_no in "Yes" "No"; do
	case "$yes_no" in
		Yes) break;;
		No ) exit;;
	esac
done
endsnippet


# ==============================================================================
# TEST
# ==============================================================================
snippet d "" w
[[ -d ${1:/path/to/dir} ]]
endsnippet
snippet dir "" w
[[ -d ${1:/path/to/dir} ]]
endsnippet
snippet f "" w
[[ -f ${1:filename} ]]
endsnippet
snippet file "" w
[[ -f ${1:filename} ]]
endsnippet
snippet n "" w
[[ -n "$$${1:var}" ]]
endsnippet
snippet z "" w
[[ -z "$$${1:var}" ]]
endsnippet


# ==============================================================================
# VARIABLES
# ==============================================================================
snippet curr "definition" b
declare -r CURRENT_DIR="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"
endsnippet

snippet string "Multi-line string"
${1:varname}=$(cat <<-EOF
$0
EOF
)
endsnippet

snippet $ "[$0] filename"
\$0
endsnippet
snippet $ "[$$] PID of current shell"
\$$
endsnippet
snippet $ "[$#] number of arguments"
\$#
endsnippet
snippet $ "[$@] all arguments individually double quoted"
\$@
endsnippet
snippet $ "[$*] all arguments double quoted"
\$*
endsnippet
snippet $ "[$?] exit status of last command"
\$?
endsnippet
snippet $ "[$!] PID of last background command"
\$!
endsnippet
snippet $ "[$_] last argument of previous command"
\$_
endsnippet

